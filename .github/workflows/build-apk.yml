name: Build and Release APK

on:
  workflow_dispatch: {}

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Install Node dependencies
        run: npm ci

      - name: Build web (Next.js)
        run: npm run build

      - name: Copy web build to Android assets
        run: |
          rm -rf android/app/src/main/assets/public || true
          mkdir -p android/app/src/main/assets/public
          cp -r out/* android/app/src/main/assets/public/ || true

      - name: Ensure Capacitor Android
        run: |
          npm install @capacitor/android --no-save || true
          npx cap sync android || true

      - name: Make gradlew executable
        run: chmod +x android/gradlew

      - name: Build APK
        run: |
          set -e
          cd android
          ./gradlew clean assembleDebug --no-daemon --refresh-dependencies

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: android/app/build/outputs/apk/debug/app-debug.apk

      - name: Create GitHub release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: apk-build-${{ github.run_id }}
          name: APK build ${{ github.run_number }}
          draft: false
          prerelease: true

      - name: Upload APK to Release
        uses: softprops/action-upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: android/app/build/outputs/apk/debug/app-debug.apk
          asset_name: app-debug.apk
          asset_content_type: application/vnd.android.package-archive
name: Build and Release APK

on:
  workflow_dispatch: {}

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Install Node dependencies
        run: npm ci

      - name: Build web (Next.js)
        run: npm run build

      - name: Copy web build to Android assets
        run: |
          rm -rf android/app/src/main/assets/public || true
          mkdir -p android/app/src/main/assets/public
          cp -r out/* android/app/src/main/assets/public/ || true

      - name: Ensure Capacitor Android
        run: |
          npm install @capacitor/android --no-save || true
          npx cap sync android || true

      - name: Make gradlew executable
        run: chmod +x android/gradlew

      - name: Build APK
        run: |
          set -e
          cd android
          ./gradlew clean assembleDebug --no-daemon --refresh-dependencies

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: android/app/build/outputs/apk/debug/app-debug.apk

      - name: Create GitHub release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: apk-build-${{ github.run_id }}
          name: APK build ${{ github.run_number }}
          draft: false
          prerelease: true

      - name: Upload APK to Release
        uses: softprops/action-upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: android/app/build/outputs/apk/debug/app-debug.apk
          asset_name: app-debug.apk
          asset_content_type: application/vnd.android.package-archive
name: Build APK and commit

on:
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Build APK in Docker
        run: |
          echo "Running Android build inside Docker"
          docker run --rm -v "${{ github.workspace }}:/workspace" -w /workspace thyrlian/android-sdk bash -c "cd android && ./gradlew assembleDebug"

      - name: List built APKs
        run: |
          ls -la android/app/build/outputs/apk || true
          ls -la android/app/build/outputs/apk/debug || true

      - name: Commit APK back to repo
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        name: Build and Release APK

        on:
          workflow_dispatch: {}

        jobs:
          build-and-release:
            runs-on: ubuntu-latest
            steps:
              - name: Checkout
                uses: actions/checkout@v4
                with:
                  fetch-depth: 0

              - name: Setup Java
                uses: actions/setup-java@v4
                with:
                  distribution: 'temurin'
                  java-version: '21'

              - name: Setup Node
                uses: actions/setup-node@v4
                with:
                  node-version: '20'

              - name: Install Node dependencies
                run: npm ci

              - name: Build web (Next.js)
                run: npm run build

              - name: Copy web build to Android assets
                run: |
                  rm -rf android/app/src/main/assets/public || true
                  mkdir -p android/app/src/main/assets/public
                  cp -r out/* android/app/src/main/assets/public/ || true

              - name: Ensure Capacitor Android
                run: |
                  npm install @capacitor/android --no-save || true
                  npx cap sync android || true

              - name: Make gradlew executable
                run: chmod +x android/gradlew

              - name: Build APK
                run: |
                  set -e
                  cd android
                  ./gradlew clean assembleDebug --no-daemon --refresh-dependencies

              - name: Upload APK artifact
                uses: actions/upload-artifact@v4
                with:
                  name: app-debug.apk
                  path: android/app/build/outputs/apk/debug/app-debug.apk

              - name: Create GitHub release
                id: create_release
                uses: ncipollo/release-action@v1
                with:
                  tag: apk-build-${{ github.run_id }}
                  name: APK build ${{ github.run_number }}
                  draft: false
                  prerelease: true

              - name: Upload APK to Release
                uses: softprops/action-upload-release-asset@v1
                with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: android/app/build/outputs/apk/debug/app-debug.apk
                  asset_name: app-debug.apk
                  asset_content_type: application/vnd.android.package-archive
